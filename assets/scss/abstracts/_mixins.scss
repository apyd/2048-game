@use 'variables';
@use 'sass:list';

@mixin positionFlex($direction, $justify, $align) {
    display: flex;
    flex-direction: $direction;
    justify-content: $justify;
    align-items: $align;
}

@mixin animation($name, $duration) {
    @keyframes #{$name} {
      @content;
    }
    animation-name: $name;
	animation-duration: $duration;
}

/// Mixin to manage responsive breakpoints - author Hugo Giraudel
@mixin respond-to($breakpoint) {
    // If the key exists in the map
    @if map-has-key(variables.$breakpoints, $breakpoint) {
        @media #{inspect(map-get(variables.$breakpoints, $breakpoint))} {
            @content;
        }
    }
    @else {
        @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys(variables.$breakpoints)}.";
    }
}

@mixin tile-modifiers {
    @each $name, $hex in variables.$tileColors {
        &--#{$name} {
            background-color: $hex;
        }
    }
}

@mixin background-image($url, $from, $to : $from) {
	background-image: url($url + '-' + nth(map-keys(variables.$breakpoints), 1) + '.png');
	@for $i from $from through $to {
		$item : nth(map-keys(variables.$breakpoints), $i);
			@include respond-to($item) {
				background-image: url($url + '-' +nth(map-keys(variables.$breakpoints), $i) + '.png');
		};
	}
}